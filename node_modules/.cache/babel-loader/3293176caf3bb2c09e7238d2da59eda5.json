{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"C:\\\\Users\\\\t73de\\\\Desktop\\\\Flipping-Game\\\\src\\\\app.js\";\nimport React from 'react';\nimport StartPage from './components/StartPage';\nimport FinishPage from './components/FinishPage';\nimport GameView from './components/GameView';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makePrice = (min, max) => {\n      let price = Math.floor(Math.random() * (max - min)) + min;\n      return price;\n    };\n\n    this.setGameview = () => {\n      this.setState({\n        upDateGameview: false\n      });\n    };\n\n    this.startGame = () => {\n      this.changeDay();\n      this.setPrices();\n      this.setState({\n        funds: 500,\n        loan: 500,\n        currentDay: 1,\n        currentLocation: 'Business District',\n        isStartPageActive: false,\n        isGameViewActive: true,\n        isLocationButtonActive: true,\n        isPayLoanButtonActive: true,\n        upDateGameview: true\n      });\n    };\n\n    this.setPrices = () => {\n      let itemsList = this.props.items.map(function (item) {\n        let priceMin = item.minPrice;\n        let priceMax = item.maxPrice;\n\n        function currentItemPrice(priceMin, priceMax) {\n          return Math.floor(Math.random() * (priceMax - priceMin)) + priceMin;\n        }\n\n        ;\n        let itemPrice = currentItemPrice(priceMin, priceMax);\n        let itemName = item.name;\n        return {\n          name: itemName,\n          minPrice: item.minPrice,\n          maxPrice: item.minPrice,\n          price: itemPrice\n        };\n      });\n      this.setState({\n        items: itemsList\n      });\n    };\n\n    this.openBuyItemModal = (item, price) => {\n      console.log(item);\n      console.log(price);\n      console.log(this.state.playerItems);\n\n      if (!item) {\n        let item = this.state.itemToBuy;\n      }\n\n      const itemName = item.name;\n      const newItem = this.state.items.find(item => item.name === itemName);\n      const itemToBuy = {\n        name: item.name,\n        quantity: 0,\n        price: price\n      };\n      this.setState({\n        itemToBuy: itemToBuy,\n        isBuyItemModalActive: true,\n        isGameViewBlurred: true,\n        upDateGameview: false\n      });\n      console.log(itemToBuy);\n    };\n\n    this.openSellItemModal = (item, price) => {\n      const itemName = item.name;\n      console.log(itemName);\n      console.log(this.state.playerItems);\n      const newItem = this.state.playerItems.find(item => item.name == itemName);\n      console.log(newItem);\n      const itemToSell = {\n        name: newItem.name,\n        quantity: newItem.quantity,\n        price: price\n      };\n      this.setState({\n        itemToSell: itemToSell,\n        isSellItemModalActive: true,\n        isGameViewBlurred: true,\n        upDateGameview: false\n      });\n    };\n\n    this.cancelButton = () => {\n      this.setState({\n        selectedQuantity: 0,\n        currentTotal: 0,\n        isBuyItemModalActive: false,\n        isSellItemModalActive: false,\n        isLoanModalActive: false,\n        isLocationModalActive: false,\n        isGameViewBlurred: false,\n        isPlayerBagModalActive: false,\n        upDateGameview: false\n      });\n    };\n\n    this.doesPlayerHaveThis = item => {\n      let playerItems = this.state.playerItems;\n      return this.state.playerItems.some(key => key.name == item.name);\n    };\n\n    this.addItem = (item, quantity, totalPrice) => {\n      let playerItemsQuantityMaxNew = this.state.playerItemsQuantityMax - quantity;\n      console.log(totalPrice);\n      this.setState({\n        funds: this.state.funds - totalPrice,\n        playerItemsQuantityMax: playerItemsQuantityMaxNew\n      });\n\n      if (!this.state.playerItems) {\n        let newQuantity = quantity;\n        let newPrice = item.price;\n        let newItem = {\n          name: item.name,\n          price: newPrice,\n          quantity: newQuantity\n        };\n        console.log(newItem);\n        this.setState({\n          playerItems: newItem\n        });\n      } else if (this.doesPlayerHaveThis(item)) {\n        console.log('Player has this item!');\n        let matchingItem = this.state.playerItems.find(matchingItem => matchingItem.name == item.name);\n        console.log(matchingItem);\n        let newQuantity = matchingItem.quantity + quantity;\n        console.log(matchingItem.quantity);\n        let newPrice = (matchingItem.price + totalPrice / quantity) / newQuantity;\n        let newPlayerItems = this.state.playerItems.map(playerItem => playerItem.name === item.name ? { ...playerItem,\n          newQuantity,\n          newPrice\n        } : playerItem);\n        this.setState({\n          playerItems: newPlayerItems\n        });\n        console.log(newPlayerItems);\n      } else {\n        let newItem = {\n          name: item.name,\n          price: item.price,\n          quantity: quantity\n        };\n        let newPlayerItems = this.state.playerItems.concat(newItem);\n        console.log(newPlayerItems);\n        this.setState({\n          playerItems: newPlayerItems\n        });\n        console.log(newPlayerItems);\n      }\n\n      ;\n      this.cancelButton();\n    };\n\n    this.sellItem = (item, cost, quantityToRemove) => {\n      let playerItemsQuantityMaxNew = this.state.playerItemsQuantityMax + quantityToRemove;\n      let matchingItem = this.state.playerItems.find(matchingItem => matchingItem.name == item.name);\n      console.log(matchingItem);\n      let quantity = matchingItem.quantity - quantityToRemove;\n      console.log(quantity);\n\n      if (quantity == 0) {\n        let playerItems = this.state.playerItems;\n        let newPlayerItems = playerItems.filter(matchingItem => matchingItem.name !== item.name);\n        this.setState({\n          playerItems: newPlayerItems,\n          funds: this.state.funds + cost,\n          playerItemsQuantityMax: playerItemsQuantityMaxNew\n        });\n        console.log(newPlayerItems);\n      } else {\n        let newPlayerItems = this.state.playerItems.map(playerItem => playerItem.name === item.name ? { ...playerItem,\n          quantity\n        } : playerItem);\n        this.setState({\n          playerItems: newPlayerItems,\n          funds: this.state.funds + cost,\n          playerItemsQuantityMax: playerItemsQuantityMaxNew\n        });\n        console.log(newPlayerItems);\n      }\n\n      ;\n      this.cancelButton();\n    };\n\n    this.openLoanModal = () => {\n      const loan = this.state.loan;\n      this.setState({\n        isLoanModalActive: true,\n        isGameViewBlurred: true,\n        upDateGameview: false\n      });\n    };\n\n    this.payLoan = payment => {\n      const newLoanAmount = this.state.loan - payment;\n      const newFunds = this.state.funds - payment;\n      this.setState({\n        loan: newLoanAmount,\n        funds: newFunds,\n        isLoanModalActive: false,\n        isGameViewBlurred: false,\n        upDateGameview: false\n      });\n\n      if (newLoanAmount == 0) {\n        this.setState({\n          isPayLoanButtonActive: false\n        });\n      }\n    };\n\n    this.openLocationModal = () => {\n      this.setState({\n        isLocationModalActive: true,\n        isGameViewBlurred: true,\n        upDateGameview: false\n      });\n    };\n\n    this.openPlayerBagModal = () => {\n      this.setState({\n        isPlayerBagModalActive: true,\n        isGameViewBlurred: true,\n        upDateGameview: false\n      });\n    };\n\n    this.finishGameButton = () => {\n      const finalScore = this.state.funds - this.state.loan;\n      this.setState({\n        finalScore: finalScore,\n        isFinishPageActive: true,\n        isGameViewBlurred: true\n      });\n    };\n\n    this.changeDay = () => {\n      ++this.state.currentDay;\n      console.log(\"IT IS NOW DAY \" + this.state.currentDay);\n\n      if (this.state.loan != 0) {\n        this.state.loan = Math.round(this.state.loan * 1.1);\n      }\n\n      ;\n      console.log(\"THE LOAN AMOUNT IS NOW $\" + this.state.loan);\n    };\n\n    this.changeLocation = location => {\n      this.setState({\n        currentLocation: location\n      });\n\n      if (this.state.currentDay === 29) {\n        this.changeDay();\n        this.setState({\n          isFinishGameButtonActive: true,\n          isPayLoanButtonActive: false,\n          isMoveButtonActive: false,\n          selectedQuantity: 0,\n          currentTotal: 0,\n          isBuyItemModalActive: false,\n          isSellItemModalActive: false,\n          isLoanModalActive: false,\n          isLocationModalActive: false,\n          isGameViewBlurred: false,\n          upDateGameview: true\n        });\n      } else {\n        console.log(\"THE NEW LOCATION IS \" + location);\n        this.changeDay();\n        this.setState({\n          selectedQuantity: 0,\n          currentTotal: 0,\n          isBuyItemModalActive: false,\n          isSellItemModalActive: false,\n          isLoanModalActive: false,\n          isLocationModalActive: false,\n          isGameViewBlurred: false,\n          upDateGameview: true\n        });\n      }\n    };\n\n    this.state = {\n      items: [{\n        name: `Video Games`,\n        minPrice: 50,\n        maxPrice: 200,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Sports Memorabilia`,\n        minPrice: 50,\n        maxPrice: 500,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Antique Furniture`,\n        minPrice: 100,\n        maxPrice: 1000,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Vintage Clothing`,\n        minPrice: 30,\n        maxPrice: 120,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Classic Toys`,\n        minPrice: 50,\n        maxPrice: 200,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `College Textbooks`,\n        minPrice: 10,\n        maxPrice: 100,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Antique Books`,\n        minPrice: 30,\n        maxPrice: 150,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Gaming Computers`,\n        minPrice: 150,\n        maxPrice: 600,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Stereos`,\n        minPrice: 100,\n        maxPrice: 700,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `High End Jewelry`,\n        minPrice: 30,\n        maxPrice: 1500,\n        quantity: 0,\n        currentPrice: 0\n      }, {\n        name: `Musical Instruments`,\n        minPrice: 100,\n        maxPrice: 2000,\n        quantity: 0,\n        currentPrice: 0\n      }],\n      locations: [{\n        id: `01`,\n        name: `Business District`\n      }, {\n        id: `02`,\n        name: `Hyde Park`\n      }, {\n        id: `03`,\n        name: `Downtown`\n      }, {\n        id: `04`,\n        name: `Duckworth Villas`\n      }, {\n        id: `05`,\n        name: `Hidden Pines`\n      }, {\n        id: `06`,\n        name: `Memorial Heights`\n      }, {\n        id: `07`,\n        name: `River Terrace`\n      }, {\n        id: `08`,\n        name: `Berrington Beach`\n      }],\n      currentLocation: 'Business District',\n      funds: 500,\n      loan: 500,\n      currentDay: 0,\n      selectedQuantity: 0,\n      currentTotal: 0,\n      itemToBuy: {\n        name: '',\n        price: 0,\n        quantity: 0\n      },\n      itemToSell: {\n        name: '',\n        price: 0,\n        quantity: 0\n      },\n      playerItems: [],\n      playerItemsQuantityMax: 100,\n      isGameViewActive: false,\n      isStartPageActive: true,\n      isFinishPageActive: false,\n      isBuyItemModalActive: false,\n      isSellItemModalActive: false,\n      isLoanModalActive: false,\n      isLocationModalActive: false,\n      isGameViewBlurred: false,\n      isFinishButtonActive: false,\n      isMoveButtonActive: true,\n      isPayLoanButtonActive: false,\n      isPlayerBagModalActive: false,\n      upDateGameview: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(StartPage, {\n      isActive: this.state.isStartPageActive,\n      startButton: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), React.createElement(GameView, Object.assign({}, this.props, {\n      setGameview: this.setGameview,\n      upDateGameview: this.state.upDateGameview,\n      doesPlayerHaveThis: this.doesPlayerHaveThis,\n      isBlurred: this.state.isGameViewBlurred,\n      isActive: this.state.isGameViewActive,\n      isMoveButtonActive: this.state.isMoveButtonActive,\n      isFinishGameButtonActive: this.state.isFinishGameButtonActive,\n      finishGameButton: this.finishGameButton,\n      openBuyItemModal: this.openBuyItemModal,\n      increaseBuyQuantity: this.increaseBuyQuantity,\n      decreaseQuantity: this.decreaseQuantity,\n      itemToBuy: this.state.itemToBuy,\n      addItem: this.addItem,\n      openSellItemModal: this.openSellItemModal,\n      increaseSellQuantity: this.increaseSellQuantity,\n      sellItem: this.sellItem,\n      isPayLoanButtonActive: this.state.isPayLoanButtonActive,\n      openLoanModal: this.openLoanModal,\n      payLoan: this.payLoan,\n      openPlayerBagModal: this.openPlayerBagModal,\n      isPlayerBagModalActive: this.state.isPlayerBagModalActive,\n      playerItemsQuantityMax: this.state.playerItemsQuantityMax,\n      openLocationModal: this.openLocationModal,\n      changeLocation: this.changeLocation,\n      items: this.state.items,\n      playerItems: this.state.playerItems,\n      moveButton: this.moveButton,\n      locations: this.state.locations,\n      funds: this.state.funds,\n      loan: this.state.loan,\n      currentDay: this.state.currentDay,\n      currentLocation: this.state.currentLocation,\n      selectedQuantity: this.state.selectedQuantity,\n      itemToSell: this.state.itemToSell,\n      cancelButton: this.cancelButton,\n      isBuyItemModalActive: this.state.isBuyItemModalActive,\n      isSellItemModalActive: this.state.isSellItemModalActive,\n      isLoanModalActive: this.state.isLoanModalActive,\n      isLocationModalActive: this.state.isLocationModalActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    })), React.createElement(FinishPage, {\n      isActive: this.state.isFinishPageActive,\n      funds: this.state.funds,\n      startButton: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/t73de/Desktop/Flipping-Game/src/app.js"],"names":["React","StartPage","FinishPage","GameView","App","Component","constructor","props","makePrice","min","max","price","Math","floor","random","setGameview","setState","upDateGameview","startGame","changeDay","setPrices","funds","loan","currentDay","currentLocation","isStartPageActive","isGameViewActive","isLocationButtonActive","isPayLoanButtonActive","itemsList","items","map","item","priceMin","minPrice","priceMax","maxPrice","currentItemPrice","itemPrice","itemName","name","openBuyItemModal","console","log","state","playerItems","itemToBuy","newItem","find","quantity","isBuyItemModalActive","isGameViewBlurred","openSellItemModal","itemToSell","isSellItemModalActive","cancelButton","selectedQuantity","currentTotal","isLoanModalActive","isLocationModalActive","isPlayerBagModalActive","doesPlayerHaveThis","some","key","addItem","totalPrice","playerItemsQuantityMaxNew","playerItemsQuantityMax","newQuantity","newPrice","matchingItem","newPlayerItems","playerItem","concat","sellItem","cost","quantityToRemove","filter","openLoanModal","payLoan","payment","newLoanAmount","newFunds","openLocationModal","openPlayerBagModal","finishGameButton","finalScore","isFinishPageActive","round","changeLocation","location","isFinishGameButtonActive","isMoveButtonActive","currentPrice","locations","id","isFinishButtonActive","render","increaseBuyQuantity","decreaseQuantity","increaseSellQuantity","moveButton"],"mappings":"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","sourcesContent":["'use strict';\r\nimport React from 'react';\r\nimport StartPage from './components/StartPage'\r\nimport FinishPage from './components/FinishPage'\r\nimport GameView from './components/GameView'\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [\r\n                {\r\n                    name: `Video Games`,\r\n                    minPrice: 50,\r\n                    maxPrice: 200,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Sports Memorabilia`,\r\n                    minPrice: 50,\r\n                    maxPrice: 500,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Antique Furniture`,\r\n                    minPrice: 100,\r\n                    maxPrice: 1000,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Vintage Clothing`,\r\n                    minPrice: 30,\r\n                    maxPrice: 120,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Classic Toys`,\r\n                    minPrice: 50,\r\n                    maxPrice: 200,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `College Textbooks`,\r\n                    minPrice: 10,\r\n                    maxPrice: 100,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Antique Books`,\r\n                    minPrice: 30,\r\n                    maxPrice: 150,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Gaming Computers`,\r\n                    minPrice: 150,\r\n                    maxPrice: 600,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Stereos`,\r\n                    minPrice: 100,\r\n                    maxPrice: 700,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `High End Jewelry`,\r\n                    minPrice: 30,\r\n                    maxPrice: 1500,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n\r\n                {\r\n                    name: `Musical Instruments`,\r\n                    minPrice: 100,\r\n                    maxPrice: 2000,\r\n                    quantity: 0,\r\n                    currentPrice: 0\r\n                },\r\n            ],\r\n\r\n            locations: [\r\n                {\r\n                    id: `01`,\r\n                    name: `Business District`,\r\n                },\r\n\r\n                {\r\n                    id: `02`,\r\n                    name: `Hyde Park`,\r\n                },\r\n\r\n                {\r\n                    id: `03`,\r\n                    name: `Downtown`,\r\n                },\r\n\r\n                {\r\n                    id: `04`,\r\n                    name: `Duckworth Villas`,\r\n                },\r\n\r\n                {\r\n                    id: `05`,\r\n                    name: `Hidden Pines`,\r\n                },\r\n\r\n                {\r\n                    id: `06`,\r\n                    name: `Memorial Heights`,\r\n                },\r\n\r\n                {\r\n                    id: `07`,\r\n                    name: `River Terrace`,\r\n                },\r\n\r\n                {\r\n                    id: `08`,\r\n                    name: `Berrington Beach`,\r\n                },\r\n            ],\r\n\r\n            currentLocation: 'Business District',\r\n            funds: 500,\r\n            loan: 500,\r\n            currentDay: 0,\r\n            selectedQuantity: 0,\r\n            currentTotal: 0,\r\n            itemToBuy: {\r\n                name: '',\r\n                price: 0,\r\n                quantity: 0,\r\n            },\r\n            itemToSell: {\r\n                name: '',\r\n                price: 0,\r\n                quantity: 0,\r\n            },\r\n            playerItems: [\r\n                \r\n        ],\r\n        playerItemsQuantityMax: 100,\r\n            isGameViewActive: false,\r\n            isStartPageActive: true,\r\n            isFinishPageActive: false,\r\n            isBuyItemModalActive: false,\r\n            isSellItemModalActive: false,\r\n            isLoanModalActive: false,\r\n            isLocationModalActive: false,\r\n            isGameViewBlurred: false,\r\n            isFinishButtonActive: false,\r\n            isMoveButtonActive: true,\r\n            isPayLoanButtonActive: false,\r\n            isPlayerBagModalActive: false,\r\n            upDateGameview: true\r\n        };\r\n    }\r\n\r\n    makePrice = (min, max) => {\r\n        let price = Math.floor(Math.random() * (max - min)) + min;\r\n        return price;\r\n    }\r\n\r\n\r\n    setGameview = () => {\r\n        this.setState({\r\n            upDateGameview: false   \r\n        });\r\n    }\r\n\r\n    startGame = () => {\r\n        this.changeDay();\r\n        this.setPrices();\r\n        this.setState({\r\n            funds: 500,\r\n            loan: 500,\r\n            currentDay: 1,\r\n            currentLocation: 'Business District',\r\n            isStartPageActive: false,\r\n            isGameViewActive: true,\r\n            isLocationButtonActive: true,\r\n            isPayLoanButtonActive: true,\r\n            upDateGameview: true\r\n        });\r\n    }\r\n\r\n    setPrices = () => {\r\n        let itemsList = this.props.items.map(function (item) {\r\n            let priceMin = item.minPrice;\r\n            let priceMax = item.maxPrice;\r\n            function currentItemPrice(priceMin, priceMax) {\r\n                return Math.floor(Math.random() * (priceMax - priceMin)) + priceMin;\r\n            };\r\n            let itemPrice = currentItemPrice(priceMin, priceMax);\r\n            let itemName = item.name;\r\n            return { name: itemName, minPrice: item.minPrice, maxPrice: item.minPrice, price: itemPrice }\r\n        });\r\n        this.setState({\r\n            items: itemsList,\r\n        });\r\n    }\r\n\r\n       openBuyItemModal = (item, price) => {\r\n        console.log(item)\r\n        console.log(price)\r\n        console.log(this.state.playerItems);\r\n        if (!item) {\r\n            let item = this.state.itemToBuy\r\n        }\r\n\r\n        const itemName = item.name;\r\n        const newItem = this.state.items.find(item => (item.name === itemName));\r\n        const itemToBuy = { name: item.name, quantity: 0, price: price }\r\n        this.setState({\r\n            itemToBuy: itemToBuy,\r\n            isBuyItemModalActive: true,\r\n            isGameViewBlurred: true,\r\n            upDateGameview: false\r\n        });\r\n        console.log(itemToBuy);\r\n    };\r\n\r\n\r\n    openSellItemModal = (item, price) => {\r\n        const itemName = item.name;\r\n        console.log(itemName);\r\n        console.log(this.state.playerItems);\r\n        const newItem = this.state.playerItems.find(item => (item.name == itemName));\r\n        console.log(newItem);\r\n        const itemToSell = { name: newItem.name, quantity: newItem.quantity, price: price };\r\n                this.setState({\r\n            itemToSell: itemToSell,\r\n            isSellItemModalActive: true,\r\n            isGameViewBlurred: true,\r\n            upDateGameview: false\r\n        })\r\n\r\n    };\r\n\r\n\r\n    cancelButton = () => {\r\n\r\n        this.setState({\r\n            selectedQuantity: 0,\r\n            currentTotal: 0,\r\n            isBuyItemModalActive: false,\r\n            isSellItemModalActive: false,\r\n            isLoanModalActive: false,\r\n            isLocationModalActive: false,\r\n            isGameViewBlurred: false,\r\n            isPlayerBagModalActive: false,\r\n            upDateGameview: false\r\n        })\r\n    };\r\n\r\n\r\n\r\n\r\n       doesPlayerHaveThis = (item) => {\r\n               let playerItems = this.state.playerItems;\r\n     return this.state.playerItems.some(key => \r\n                       key.name == item.name);\r\n              }\r\n\r\n    \r\n    addItem = (item, quantity, totalPrice) => {\r\n        let playerItemsQuantityMaxNew = this.state.playerItemsQuantityMax - quantity;\r\n        console.log(totalPrice);\r\n        this.setState({\r\n            funds: this.state.funds - totalPrice,\r\n            playerItemsQuantityMax: playerItemsQuantityMaxNew\r\n        });\r\n        if (!this.state.playerItems){\r\n            let newQuantity = quantity;\r\n            let newPrice = item.price;\r\n            let newItem = {\r\n                name: item.name,\r\n                price: newPrice,\r\n                quantity: newQuantity,\r\n            }\r\n            console.log(newItem);\r\n            this.setState({\r\n                playerItems: newItem,\r\n            });\r\n        }\r\n        else if (this.doesPlayerHaveThis(item)) {\r\n            console.log('Player has this item!');\r\n            \r\n            let matchingItem = this.state.playerItems.find(matchingItem => matchingItem.name == item.name);\r\n            console.log(matchingItem);\r\n            let newQuantity = matchingItem.quantity + quantity;\r\n            console.log(matchingItem.quantity);\r\n            let newPrice = (matchingItem.price + (totalPrice / quantity)) / newQuantity;\r\n                   let newPlayerItems = this.state.playerItems.map(playerItem => playerItem.name === item.name ? {...playerItem, newQuantity, newPrice } : playerItem);\r\n            \r\n            this.setState( {\r\n                              playerItems: newPlayerItems\r\n                        });\r\n                        console.log(newPlayerItems);\r\n        } else {\r\n            let newItem = {\r\n                name: item.name,\r\n                price: item.price,\r\n                quantity: quantity,\r\n            }\r\n            let newPlayerItems = this.state.playerItems.concat(newItem);\r\n            console.log(newPlayerItems);\r\n            this.setState({\r\n                playerItems: newPlayerItems\r\n            });\r\nconsole.log(newPlayerItems);\r\n        };\r\n        \r\n        this.cancelButton();\r\n    }\r\n\r\n     sellItem = (item, cost, quantityToRemove) => {\r\n         let playerItemsQuantityMaxNew = this.state.playerItemsQuantityMax + quantityToRemove;\r\n        let matchingItem = this.state.playerItems.find(matchingItem => matchingItem.name == item.name);\r\n            console.log(matchingItem);\r\n            let quantity = matchingItem.quantity - quantityToRemove;\r\n            console.log(quantity);\r\n            if (quantity == 0){\r\n                let playerItems =  this.state.playerItems;\r\n                let newPlayerItems = playerItems.filter(matchingItem => matchingItem.name !== item.name);\r\n                this.setState( {\r\n                    playerItems: newPlayerItems,\r\n                    funds: this.state.funds + cost,\r\n                    playerItemsQuantityMax: playerItemsQuantityMaxNew\r\n                });\r\n                console.log(newPlayerItems);\r\n            }else{          \r\n            let newPlayerItems = this.state.playerItems.map(playerItem => playerItem.name === item.name ? {...playerItem, quantity} : playerItem);\r\n            this.setState( {\r\n                playerItems: newPlayerItems,\r\n                funds: this.state.funds + cost,\r\n                playerItemsQuantityMax: playerItemsQuantityMaxNew\r\n            });\r\n            console.log(newPlayerItems);\r\n          \r\n        };\r\n                        this.cancelButton();\r\n       \r\n    };\r\n\r\n\r\n    openLoanModal = () => {\r\n        const loan = this.state.loan;\r\n        this.setState({\r\n            isLoanModalActive: true,\r\n            isGameViewBlurred: true,\r\n            upDateGameview: false\r\n        })\r\n\r\n    };\r\n\r\n    payLoan = (payment) => {\r\n        const newLoanAmount = this.state.loan - payment;\r\n        const newFunds = this.state.funds - payment;\r\n        this.setState({\r\n            loan: newLoanAmount,\r\n            funds: newFunds,\r\n            isLoanModalActive: false,\r\n            isGameViewBlurred: false,\r\n            upDateGameview: false\r\n        })\r\n        if (newLoanAmount == 0) {\r\n            this.setState({\r\n                isPayLoanButtonActive: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    openLocationModal = () => {\r\n        this.setState({\r\n            isLocationModalActive: true,\r\n            isGameViewBlurred: true,\r\n            upDateGameview: false\r\n        })\r\n\r\n    };\r\n\r\n    openPlayerBagModal = () => {\r\n        this.setState({\r\n            isPlayerBagModalActive: true,\r\n            isGameViewBlurred: true,\r\n            upDateGameview: false\r\n        })\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    finishGameButton = () => {\r\n        const finalScore = this.state.funds - this.state.loan;\r\n        this.setState({\r\n            finalScore: finalScore,\r\n            isFinishPageActive: true,\r\n            isGameViewBlurred: true\r\n        })\r\n\r\n    };\r\n\r\n    changeDay = () => {\r\n        ++this.state.currentDay\r\n        \r\n        console.log(\"IT IS NOW DAY \" + this.state.currentDay);\r\n        if (this.state.loan != 0) {\r\n            this.state.loan = Math.round(this.state.loan * 1.1);\r\n        };\r\n        console.log(\"THE LOAN AMOUNT IS NOW $\" + this.state.loan);\r\n        \r\n    }\r\n\r\n\r\n    changeLocation = (location) => {\r\n        this.setState({\r\n            currentLocation: location\r\n        });\r\nif(this.state.currentDay === 29){\r\n    this.changeDay();\r\n    this.setState({\r\n        isFinishGameButtonActive: true,\r\n        isPayLoanButtonActive: false,\r\n        isMoveButtonActive: false,\r\n        selectedQuantity: 0,\r\n        currentTotal: 0,\r\n        isBuyItemModalActive: false,\r\n        isSellItemModalActive: false,\r\n        isLoanModalActive: false,\r\n        isLocationModalActive: false,\r\n        isGameViewBlurred: false,\r\n        upDateGameview: true\r\n    })\r\n}else{\r\nconsole.log(\"THE NEW LOCATION IS \" + location);\r\n        this.changeDay();\r\n        this.setState({\r\n            selectedQuantity: 0,\r\n            currentTotal: 0,\r\n            isBuyItemModalActive: false,\r\n            isSellItemModalActive: false,\r\n            isLoanModalActive: false,\r\n            isLocationModalActive: false,\r\n            isGameViewBlurred: false,\r\n            upDateGameview: true\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <StartPage isActive={this.state.isStartPageActive} startButton={this.startGame} />\r\n\r\n                <GameView {...this.props} setGameview={this.setGameview} upDateGameview={this.state.upDateGameview} doesPlayerHaveThis={this.doesPlayerHaveThis} isBlurred={this.state.isGameViewBlurred} isActive={this.state.isGameViewActive} isMoveButtonActive={this.state.isMoveButtonActive} isFinishGameButtonActive={this.state.isFinishGameButtonActive} finishGameButton={this.finishGameButton}\r\n                    openBuyItemModal={this.openBuyItemModal} increaseBuyQuantity={this.increaseBuyQuantity} decreaseQuantity={this.decreaseQuantity} itemToBuy={this.state.itemToBuy} addItem={this.addItem}\r\n                    openSellItemModal={this.openSellItemModal} increaseSellQuantity={this.increaseSellQuantity} sellItem={this.sellItem}\r\n                    isPayLoanButtonActive={this.state.isPayLoanButtonActive} openLoanModal={this.openLoanModal} payLoan={this.payLoan}\r\n                    openPlayerBagModal={this.openPlayerBagModal} isPlayerBagModalActive={this.state.isPlayerBagModalActive} playerItemsQuantityMax= {this.state.playerItemsQuantityMax}\r\n                    openLocationModal={this.openLocationModal} changeLocation={this.changeLocation} items={this.state.items} playerItems={this.state.playerItems} moveButton={this.moveButton} locations={this.state.locations} funds={this.state.funds} loan={this.state.loan} currentDay={this.state.currentDay} currentLocation={this.state.currentLocation} selectedQuantity={this.state.selectedQuantity} itemToSell={this.state.itemToSell} cancelButton={this.cancelButton} isBuyItemModalActive={this.state.isBuyItemModalActive} isSellItemModalActive={this.state.isSellItemModalActive} isLoanModalActive={this.state.isLoanModalActive} isLocationModalActive={this.state.isLocationModalActive} />\r\n             <FinishPage isActive={this.state.isFinishPageActive} funds={this.state.funds} startButton={this.startGame} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}