{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRAPHICS\\\\Desktop\\\\Flipping-Game\\\\src\\\\components\\\\SellItemModal.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nexport default class SellItemModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = value => {\n      this.setState({\n        count: value\n      });\n    };\n\n    this.handleChangeStart = () => {};\n\n    this.handleChangeComplete = () => {};\n\n    this.sellItem = (quantity, totalPrice) => {\n      let itemToSell = this.state.item;\n      console.log('ADD ITEM ' + itemToSell + \" \" + quantity + \" \" + totalPrice);\n      this.props.sellItem(itemToSell, totalPrice, quantity);\n      this.resetCount();\n    };\n\n    this.cancelButton = () => {\n      console.log('CANCEL');\n      this.props.cancelButton();\n      this.resetCount();\n    };\n\n    this.resetCount = () => {\n      this.setState({\n        count: 0\n      });\n    };\n\n    this.state = {\n      count: 0,\n      item: {}\n    };\n    ;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      item: nextProps.itemToSell\n    });\n    this.resetCount();\n  }\n\n  render() {\n    console.log(this.props.itemToSell);\n    let item = this.state.item;\n    let newTotal = this.state.item.price * this.state.count;\n    return React.createElement(\"div\", {\n      className: this.props.isActive ? 'itemInfo' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"itemName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.item.name, \" Price:$\", this.state.item.price), React.createElement(\"section\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"How many do you want to sell?\", React.createElement(\"div\", {\n      className: \"counterInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      min: 0,\n      max: maxAmount,\n      value: count,\n      orientation: \"horizontal\",\n      step: 1,\n      onChangeStart: this.handleChangeStart,\n      onChange: this.handleOnChange,\n      onChangeComplete: this.handleChangeComplete,\n      handleLabel: count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"counterWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.count), React.createElement(\"div\", {\n      className: \"counterButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"Total: \", newTotal, React.createElement(\"div\", {\n      className: \"counterInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ok\",\n      id: \"ok\",\n      name: \"ok\",\n      value: \"ok\",\n      onClick: () => this.sellItem(this.state.count, newTotal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"OK\"), React.createElement(\"button\", {\n      className: \"cancel\",\n      id: \"cancel\",\n      name: \"cancel\",\n      onClick: () => this.cancelButton(),\n      value: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"CANCEL\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/GRAPHICS/Desktop/Flipping-Game/src/components/SellItemModal.js"],"names":["React","makeStyles","Typography","Slider","SellItemModal","Component","constructor","props","handleOnChange","value","setState","count","handleChangeStart","handleChangeComplete","sellItem","quantity","totalPrice","itemToSell","state","item","console","log","resetCount","cancelButton","componentWillReceiveProps","nextProps","render","newTotal","price","isActive","name","maxAmount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport default class SellItemModal extends React.Component {\r\n\r\n    constructor(props)  {\r\n        super(props);\r\n\r\n        this.state = {\r\n            count: 0,\r\n            item: {}\r\n        };;\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n              this.setState({\r\n      item: nextProps.itemToSell\r\n  });\r\n  this.resetCount();\r\n\r\n}\r\n\r\nhandleOnChange = (value) => {\r\n    this.setState({\r\n        count: value\r\n    })\r\n}\r\n\r\nhandleChangeStart = () => {\r\n\r\n  };\r\n\r\n  handleChangeComplete = () => {\r\n\r\n  };\r\n\r\n    sellItem = (quantity, totalPrice) => {\r\n        let itemToSell = this.state.item;\r\n        console.log('ADD ITEM ' + itemToSell + \" \"  + quantity + \" \" + totalPrice);\r\n        this.props.sellItem(itemToSell, totalPrice, quantity);\r\n        this.resetCount();\r\n    };\r\n\r\n    cancelButton = () => {\r\n        console.log('CANCEL');\r\n        this.props.cancelButton();\r\n        this.resetCount();\r\n    };\r\n\r\n    resetCount = () => {\r\n        this.setState({\r\n            count: 0\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.props.itemToSell);\r\n        let item = this.state.item;\r\n        let newTotal = this.state.item.price * this.state.count;\r\n        \r\n        return (<div className={(this.props.isActive) ? 'itemInfo' : 'hidden'}><h2 className=\"itemName\">{this.state.item.name} Price:${this.state.item.price}</h2>\r\n            <section className=\"counter\">How many do you want to sell?\r\n               <div className=\"counterInfo\">\r\n               <Slider min={0} max={maxAmount} value={count} orientation=\"horizontal\" step={1} onChangeStart={this.handleChangeStart} onChange={this.handleOnChange} onChangeComplete={this.handleChangeComplete} handleLabel={count}  />\r\n\r\n                    <div className=\"counterWindow\">{this.state.count}</div><div className=\"counterButtons\">\r\n                         </div>\r\n                    Total: {newTotal}\r\n                    <div className=\"counterInfo\">\r\n                        <button className=\"ok\" id=\"ok\" name=\"ok\" value=\"ok\" onClick={() => this.sellItem(this.state.count, newTotal)}>OK</button>\r\n                        <button className=\"cancel\" id=\"cancel\" name=\"cancel\" onClick={() => this.cancelButton()} value=\"cancel\">CANCEL</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}